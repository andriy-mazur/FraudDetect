namespace FraudDetect.WebApi.Services
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading.Tasks;
    using FraudDetect.Data;
    using FraudDetect.Interface;
    using FraudDetect.Interface.Model;
    using Newtonsoft.Json.Linq;

    public class EkataService : IBureauService
    {
        public async Task<Response> GetScoreAsync(Request request)
        {
            if (request == null) return null;

            var builder = new UriBuilder("https://api.ekata.com/3.3/identity_check");

            builder.Query = "api_key=dd642958ab6b4a11b5c9698fc83722ef";
            builder.Query += "&primary.address.country_code=" + request.CountryCode;
            builder.Query += "&primary.address.city=" + request.City;
            builder.Query += "&primary.address.street_line_1=" + request.Address;
            builder.Query += "&primary.address.postal_code=" + request.PostalCode;
            builder.Query += "&primary.firstname=" + request.FirstName;
            builder.Query += "&primary.lastname=" + request.LastName;
            builder.Query += "&primary.phone=" + request.Phone;
            builder.Query += "&primary.email_address" + request.Email;

            var response = new Response
            {
                Request_Id = request.Id, 
                Score = null, 
                ResponseDate = DateTime.Now, 
                BureauType = "ekata"
            };

            try
            {
                //var client = new HttpClient();
                //var httpResponseMessage = client.GetAsync(builder.Uri).Result;

                //using var streamReader = new StreamReader(httpResponseMessage.Content.ReadAsStreamAsync().Result);
                //var content = streamReader.ReadToEnd();

                var content = "{\"request\":{\"primary.address.country_code\":\"US\",\"primary.address.city\":\"Lynden\",\"secondary.firstname\":\"Waanataa\",\"primary.phone\":\"2069735100\",\"ip_address\":\"54.190.251.42\",\"primary.address.street_line_2\":\"Ste 1\",\"primary.name\":\"Waidong L Syrws\",\"secondary.address.country_code\":\"US\",\"primary.address.street_line_1\":\"100 Syrws St\",\"primary.email_address\":\"waidong@gmail.com\",\"primary.address.postal_code\":\"98264\",\"api_key\":\"dd642958ab6b4a11b5c9698fc83722ef\",\"primary.address.state_code\":\"WA\",\"secondary.email_address\":\"syrwspizza@example.com\",\"secondary.phone\":\"2061115101\",\"secondary.lastname\":\"Labarrete\",\"secondary.address.line_1\":\"1 Syrws St, Lynden, WA\"},\"primary_phone_checks\":{\"error\":null,\"warnings\":[],\"is_valid\":true,\"country_code\":\"US\",\"is_commercial\":true,\"line_type\":\"Non-fixed VOIP\",\"carrier\":\"Level 3 Communications\",\"is_prepaid\":false,\"match_to_name\":\"No match\",\"match_to_address\":\"Country match\",\"subscriber\":{\"name\":\"Brandie N Henry\",\"age_range\":null}},\"secondary_phone_checks\":{\"error\":null,\"warnings\":[],\"is_valid\":true,\"country_code\":\"US\",\"is_commercial\":false,\"line_type\":\"Landline\",\"carrier\":\"Whitepages Telco\",\"is_prepaid\":null,\"match_to_name\":\"No match\",\"match_to_address\":\"Zip+4 match\",\"subscriber\":{\"name\":\"Waidong L Syrws\",\"age_range\":{\"from\":30,\"to\":34}}},\"primary_address_checks\":{\"error\":null,\"warnings\":[],\"is_valid\":true,\"input_completeness\":\"Complete\",\"match_to_name\":\"Match\",\"resident\":{\"name\":\"Waidong L Syrws\",\"age_range\":{\"from\":30,\"to\":34}},\"is_commercial\":false,\"is_forwarder\":false,\"type\":\"Multi unit\"},\"secondary_address_checks\":{\"error\":null,\"warnings\":[],\"is_valid\":true,\"input_completeness\":\"Complete\",\"match_to_name\":\"Match\",\"resident\":{\"name\":\"Waanataa Labarrete Jr.\",\"age_range\":{\"from\":30,\"to\":34}},\"is_commercial\":true,\"is_forwarder\":false,\"type\":\"Single unit\",\"distance_from_primary_address\":0,\"linked_to_primary_resident\":false},\"primary_email_address_checks\":{\"error\":null,\"warnings\":[],\"is_valid\":false,\"is_autogenerated\":false,\"is_disposable\":false,\"email_first_seen_days\":450,\"email_domain_creation_days\":8833,\"match_to_name\":\"No name found\",\"match_to_address\":null,\"registered_owner\":null},\"secondary_email_address_checks\":{\"error\":null,\"warnings\":[],\"is_valid\":false,\"is_autogenerated\":false,\"is_disposable\":null,\"email_first_seen_days\":null,\"email_domain_creation_days\":8832,\"match_to_name\":\"No match\",\"match_to_address\":\"Zip+4 match\",\"registered_owner\":{\"name\":\"Wichman Zabater\",\"age_range\":{\"from\":100,\"to\":104}}},\"ip_address_checks\":{\"error\":null,\"warnings\":[],\"is_valid\":true,\"proxy_risk\":false,\"geolocation\":{\"postal_code\":\"97818\",\"city_name\":\"Boardman\",\"subdivision\":\"Oregon\",\"country_name\":\"United States\",\"country_code\":\"US\",\"continent_code\":\"NA\"},\"match_to_primary_name\":null,\"match_to_secondary_name\":null,\"distance_from_primary_address\":240,\"distance_from_secondary_address\":240,\"distance_from_primary_phone\":174,\"distance_from_secondary_phone\":240},\"identity_check_score\":360}";

                //response.IsSuccess = httpResponseMessage.IsSuccessStatusCode;
                response.Json = content;

                using var context = new FraudDetectDbContext();
                context.Responses.Add(response);
                context.Save();

                var jsonObj = JObject.Parse(content);
                var scoreStr = jsonObj["identity_check_score"].ToString();

                if(int.TryParse(scoreStr, out var score))
                {
                    response.Score = score;

                    context.Responses.Update(response);
                    context.Save();
                }
            }
            catch (Exception ex)
            {
                response.IsSuccess = false;

                DbLog.LogAsync(ex.Message, SourceType.Ekata);
            }

            return response;
        }
    }
}